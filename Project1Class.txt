import java.io.*;
import java.util.Scanner;

public class Project1 {
	static Country countries[] = new Country[145];
	static boolean sortedByName = false;
	public static void main(String[] args) throws IOException {
		//Holds name of the file given by user
		String fileName;
		String userOption = "0";
		Country printCountry = new Country();
		//ParseValues countryArray = new ParseValues();
		
		//New scanner class made to read the file name from console
		Scanner scnr = new Scanner(System.in);
		System.out.print("Enter the file name: ");
		//Reads the file name and closes the scanner object
		fileName = scnr.next();
		
		//New ParseValues object
		//ParseValues nameOfFile = new ParseValues();
		//Passes the filename as parameter to parse method in ParseValues class
		parse(fileName);	
		
		//Output the options for the user.
		/*
		System.out.println("1. Print a country's report");
		System.out.println("2. Sort by name");
		System.out.println("3. Sort by Case Fatality Rate");
		System.out.println("4. Sort by GDP per capita");
		System.out.println("5. Find and print a given country");
		System.out.println("6. Print Kendall's tau matrix");
		System.out.println("7. Quit");
		System.out.print("Enter your choice: ");
		*/
		
		while(!(userOption.equals("7"))) {
			System.out.println("1. Print a country's report");
			System.out.println("2. Sort by name");
			System.out.println("3. Sort by Case Fatality Rate");
			System.out.println("4. Sort by GDP per capita");
			System.out.println("5. Find and print a given country");
			System.out.println("6. Print Kendall's tau matrix");
			System.out.println("7. Quit");
			System.out.print("Enter your choice: ");
			
			userOption = scnr.next();
			
			switch(userOption) {
			case "1":
				printCountry.printCountries(countries);
				break;
			case "2":
				insertionSort(countries, 145);
				break;
			case "3":
				selectionSort(countries, 145);
				break;
			case "4":
				bubbleSort(countries, 145);
				break;
			case "5":
				int temp;
				if(sortedByName == true) {
					temp = binarySearch(countries, 145, "Brazil");
					System.out.println(countries[temp].getName());
				}
				else {
					sequentialSearch(countries, 145, "Brazil");
				}
				break;
			}
		}
		
		scnr.close();
	}	
	
	public static void insertionSort(Country[] countries, int length) {
		int inner, outer;
		
		for(outer = 1; outer < length; outer++) {
			Country temp = countries[outer];
			inner = outer;
			while(inner > 0 && (countries[inner - 1].getName()).compareTo(temp.getName()) > 0) {
				countries[inner] = countries[inner - 1];
				--inner;
			}
		countries[inner] = temp;
		}
		sortedByName = true;
	}
	
	public static void selectionSort(Country[] countries, int length) {
		int inner, outer;
		
		for(outer = 0; outer < length - 1; outer++) {
			int lowest = outer;
			for(inner = outer + 1; inner < length; inner++) {
				if(countries[inner].getCFR() < countries[lowest].getCFR()) {
					lowest = inner;
				}
			}
			if(lowest != outer) {
				Country temp = countries[lowest];
				countries[lowest] = countries[outer];
				countries[outer] = temp;
			}
		}
		sortedByName = false;
	}
	
	public static void bubbleSort(Country[] countries, int length) {
		int inner, outer;
		
		for(outer = 0; outer < length - 1; outer++) {
			for(inner = length - 1; inner > outer; inner--) {
				if((countries[inner].getGDPPC()) < (countries[inner - 1].getGDPPC())) {
					Country temp = countries[inner];
					countries[inner] = countries[inner - 1];
					countries[inner - 1] = temp;
				}
			}
		}
		sortedByName = false;
	}
	
	public static int binarySearch(Country[] countries, int length, String itemToSearch) {
		int lower = 0;
		int upper = length - 1;
		int mid;
		
		while(lower <= upper) {
			mid = (lower + upper) /2;
			//change to compareTo to keep things consistent
			if((countries[mid].getName()).equals(itemToSearch)) {
				return mid;
			}
			else if((countries[mid].getName()).compareTo(itemToSearch) > 0) {
				upper = mid - 1; //The target is in the lower half
			}
			else {
				lower = mid + 1;
			}
		}
		return length + 1;
	}
	
	public static int sequentialSearch(Country[] countries, int length, String itemToSearch) {
		int i = 0;
		while(i < length) {
			if(countries[i].getName().equals(itemToSearch)) {
				break;
			}
			i++;
		}
		if(i == length)
			return length;
		else
			return i;
	}

	public static void parse(String fileName) throws IOException {
		int i = 0;
		//Set up scanner to read from file.
		Scanner scnr = new Scanner(new File(fileName));
		//Set delimiter for scanner to use.
		scnr.useDelimiter(",|\n");
		
		//Set up the array for objects of type Country.
		//Country countries[] = new Country[145];
		
		try
		{
			scnr.nextLine();
			//Loop while the file still has text.
			while(scnr.hasNext()) {
				//Loops through one line at a time.
				String FileLine = scnr.nextLine();
				//The array FileCountryData will get each line and split the data using the comma.
				
				//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
				//!!!!! change FileCountryData to an array!!!!
				String FileCountryData[] = FileLine.split(",");
								
				//Variables to read and store data from file. The parseDouble makes a string into a double.
				String countryName = FileCountryData[0];
				String capitolCity = FileCountryData[1];
				double population = Double.parseDouble(FileCountryData[2]);
				double GDP = Double.parseDouble(FileCountryData[3]);
				double covidCases = Double.parseDouble(FileCountryData[4]);
				double covidDeaths = Double.parseDouble(FileCountryData[5]);
				double area = Double.parseDouble(FileCountryData[6]);
				
				//Create a country object and pass values to the constructor.
				Country myCountries = new Country(countryName, capitolCity, population, GDP, covidCases, covidDeaths, area);
				//Adds myCountries to array countries
				countries[i] = myCountries;	
				i = i + 1;
			}						
		}
		catch(Exception e)
		{
			System.out.println("Error: " + e.getMessage());
		}
		
		//Project1 hello = new Project1();
		//hello.insertionSort(countries, 145);
		//int cont = sequentialSearch(countries, 145, "Latvia");
		//System.out.println(countries[cont].getName() + ", " + countries[cont].getCapitol());
		//System.out.println((countries[0].getName()).compareTo("Brazil") < 0);
		/*for(int j = 0; j < countries.length; j++) {
			System.out.println(countries[j].getName() + ", " + countries[j].getCapital() + ", " + String.format("%.6f", countries[j].getCFR()));
		}*/
	}

}